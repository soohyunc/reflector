dnl Process this file with autoconf to produce a configure script.
AC_INIT(reflector.c)

AC_CANONICAL_SYSTEM

AC_PROG_CC
AC_PROG_CXX

AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(nsl,    main)
AC_CHECK_LIB(dl,    main)
AC_SUBST(LIBS)

xlibdirs="/usr/unsupported/lib \
	/usr/X11R6/lib \
        /usr/local/lib \
        /usr/X386/lib \
        /usr/lib/X11R6 \
        /usr/X11R5/lib \
        /usr/lib/X11R5 \
        /usr/openwin/lib \
        /usr/X11/lib \
        /import/X11R4/usr/lib"
xincdirs="/usr/unsupported/include \
	/usr/X11R6/include \
        /usr/local/include \
        /usr/X386/include \
        /usr/include/X11R6 \
        /usr/X11R5/include \
        /usr/include/X11R5 \
        /usr/openwin/include \
        /usr/X11/include \
        /usr/lpp/X11/include \
        /import/X11R4/include"


echo "checking for X11 header files"
if test "$x_includes" = NONE ; then
        AC_TEST_CPP([#include <X11/Intrinsic.h>],x_includes="",x_includes=NONE)
        if test "$x_includes" = NONE ; then
                for i in $xincdirs ; do
                        if test -r $i/X11/Intrinsic.h; then
                                x_includes=$i
                                break
                        fi
                done
                if test "$x_includes" = NONE ; then
                        echo "can't find X includes"
                        exit 1
                fi
        fi
fi
if test -n "$x_includes" ; then 
        V_INCLUDE_X11=-I$x_includes
        AC_SUBST(V_INCLUDE_X11)
fi

echo "checking for X11 library archive"
if test "$x_libraries" = NONE ; then
        AC_CHECK_LIB(X11, main, x_libraries="", x_libraries=NONE)
        if test "$x_libraries" = NONE ; then
                for i in $xlibdirs ; do
                        if test -r $i/libX11.a; then
                                x_libraries=$i
                                break
                        fi
                done
                if test "$x_libraries" = NONE ; then
                        echo "can't find X library"
                        exit 1
                fi
        fi
fi

echo "checking for libXext.a"
if test -f $x_libraries/libXext.a ; then
       x_ext=$x_libraries
else
       AC_CHECK_LIB(Xext, main, x_ext="", x_ext=NONE, -lX11)
       if test "$x_ext" = NONE ; then
                for i in $xlibdirs ; do
                        if test -r $i/libXext.a; then
                                x_ext=$i
                                break
                        fi
                done
                if test "$x_ext" = NONE ; then
                        echo "warning: compiling without -lXext"
                fi
        fi
fi
V_LIB_X11=-lX11
if test -n "$x_libraries" ; then
        V_LIB_X11="-L$x_libraries $V_LIB_X11"
fi
if test "$x_ext" != NONE ; then
        V_LIB_X11="-lXext $V_LIB_X11"
        if test -n "$x_ext" ; then
                V_LIB_X11="-L$x_ext $V_LIB_X11"
        fi
fi

AC_SUBST(V_LIB_X11)

AC_ARG_WITH(tcl,--with-tcl=path specify a pathname for tcl, d=$withval,d="")
if test "$d" != "" ; then 
        if test ! -d $d ; then 
                echo "'$d' is not a directory"
                exit 1
        fi
        V_INCLUDE_TCL=-I$d/include
        if test ! -r $d/include/tcl.h ; then
                echo "can't find tcl.h in $d/include"
                exit 1
        fi
	places="$d/lib/libtcl8.0.so \
		$d/lib/libtcl8.0.a \
                $d/lib/libtcl80.so \	
                $d/lib/libtcl80.a"
	V_LIB_TCL=FAIL
        for dir in $places; do
                if test -r $dir ; then
                        V_LIB_TCL=$dir
                        break
                fi
        done
	if test "$V_LIB_TCL" = FAIL; then
		echo "cannot find libtcl in: $places"
		exit 1
	fi
else
	AC_TEST_CPP([#include <tcl.h>], V_INCLUDE_TCL="", V_INCLUDE_TCL=FAIL)
	if test "$V_INCLUDE_TCL" = FAIL; then
		echo "checking for tcl.h"
		places="$PWD/../tcl8.0 \
			$PWD/../tcl80  \
			/usr/local/include/tcl8.0  \
			/usr/local/include/tcl80"
		for dir in $places; do
                        if test -r $dir/tcl.h ; then
                                V_INCLUDE_TCL=-I$dir
                                break
                        fi
                done
                if test "$V_INCLUDE_TCL" = FAIL; then
                        echo "can't find tcl.h"
                        exit 1
                fi
        fi
	V_LIB_TCL="FAIL"
	if test "$V_LIB_TCL" = FAIL; then
		echo "checking for libtcl"
		places="/usr/local/lib"
		for dir in $places; do
			if test -r $dir/libtcl8.0.so -o -r $dir/libtcl8.0.a; then
				V_LIB_TCL="-L$dir -ltcl8.0"
				break;
			elif test -r $dir/libtcl80.so -o -r $dir/libtcl80.a; then
				V_LIB_TCL="-L$dir -ltcl80"
				break;
			fi
		done
		if test "$V_LIB_TCL" = FAIL; then
			echo "can't find tcl library"
                        exit 1
		fi
	fi
fi

AC_ARG_WITH(tk,--with-tk=path specify a pathname for tk, d=$withval,d="")
if test "$d" != "" ; then 
        if test ! -d $d ; then 
                echo "'$d' is not a directory"
                exit 1
        fi
        V_INCLUDE_TK=-I$d/include
        if test ! -r $d/include/tk.h ; then
                echo "can't find tk.h in $d/include"
                exit 1
        fi
	places="$d/lib/libtk8.0.so \
		$d/lib/libtk8.0.a \
                $d/lib/libtk80.so \	
                $d/lib/libtk80.a"
	V_LIB_TK=FAIL
        for dir in $places; do
                if test -r $dir ; then
                        V_LIB_TK=$dir
                        break
                fi
        done
	if test "$V_LIB_TK" = FAIL; then
		echo "cannot find libtk in: $places"
		exit 1
	fi
else
	AC_TEST_CPP([#include <tk.h>], V_INCLUDE_TK="", V_INCLUDE_TK=FAIL)
	if test "$V_INCLUDE_TK" = FAIL; then
		echo "checking for tk.h"
		places="$PWD/../tk8.0 \
			$PWD/../tk80  \
			/usr/local/include/tk8.0  \
			/usr/local/include/tk80"
		for dir in $places; do
                        if test -r $dir/tk.h ; then
                                V_INCLUDE_TK=-I$dir
                                break
                        fi
                done
                if test "$V_INCLUDE_TK" = FAIL; then
                        echo "can't find tk.h"
                        exit 1
                fi
        fi
	AC_CHECK_LIB(tk, main, V_LIB_TK="-ltk8.0", V_LIB_TK="FAIL")
	if test "$V_LIB_TK" = FAIL; then
		echo "checking for libtk"
		places="/usr/local/lib"
		for dir in $places; do
			if test -r $dir/libtk8.0.so -o -r $dir/libtk8.0.a; then
				V_LIB_TK="-L$dir -ltk8.0"
				break;
			fi
			if test -r $dir/libtk80.so -o -r $dir/libtk80.a; then
				V_LIB_TK="-L$dir -ltk80"
				break;
			fi
		done
		if test "$V_LIB_TK" = FAIL; then
			echo "can't find tk library"
                        exit 1
		fi

	fi
fi
AC_SUBST(V_INCLUDE_TCL)
AC_SUBST(V_LIB_TCL)
AC_SUBST(V_INCLUDE_TK)
AC_SUBST(V_LIB_TK)
AC_SUBST(V_LIB_X11)
AC_OUTPUT(Makefile)





